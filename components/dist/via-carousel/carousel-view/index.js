import{rpxToPx}from"../../utils/base";Component({properties:{swiperItemNums:{type:Number,value:0},swiperItemWidth:{type:Number,value:470},leftX:{type:Number,value:140},scale:{type:Number,value:.7}},data:{},relations:{"../carousel-item/index":{type:"child",linked:function(t){this.calculateSwiperTotalWidth()},linkChanged:function(t){},unlinked:function(t){}}},attached(){this.translateDistance=0,this.curIndex=0},methods:{calculateSwiperTotalWidth(){const{swiperItemNums:t,swiperItemWidth:e}=this.properties,i=this.getRelationNodes("../carousel-item/index");if(t&&i.length===t){const s=t*e;this.setData({allWidth:s}),this._childrenNodes=i,this._callChildrenMethod(this.curIndex,this._updateChildrenStatus)}},_callChildrenMethod(t=0,e){this._childrenNodes.forEach(((i,s)=>{"function"==typeof e&&e.call(this,i,t,s)}))},_updateChildrenStatus(t,e,i){t.update({active:e==i,scale:this.properties.scale})},swiperTouchstart:function(t){const e=t.changedTouches[0].clientX;this.startClinetX=e,this.startTimestamp=t.timeStamp},swiperTouchmove:function(t){},swiperTouchend:function(t){const e=t.timeStamp-this.startTimestamp,i=t.changedTouches[0].clientX-this.startClinetX;if(e<500&&Math.abs(i)>10){let t=this.curIndex,e=rpxToPx(this.data.swiperItemWidth),s=this.translateDistance,a=0;i>0?(t-=1,t<0&&(t=0,e=0),a=s+e):(t+=1,t>=this.data.swiperItemNums&&(t=this.data.swiperItemNums-1,e=0),a=s-e),this._callChildrenMethod(t,this._updateChildrenStatus),this._callChildrenMethod(t,((t,e)=>{t.animationToLarge(a),t.animationToSmall(a),this.translateDistance=a})),this.curIndex=t,this.triggerEvent("onChange",t)}}}});