import calendar from"./utils";Component({properties:{type:{type:String,value:"multiple"},startDate:{type:String,value:""},endDate:{type:String,value:""},date:{type:Array,value:[]},height:{type:Number,value:1100},cancelColor:{type:String,value:"#333"},confirmColor:{type:String,value:"#0a1d66"},clickConfirmAutoClose:{type:Boolean,value:!0},maskClose:{type:Boolean,value:!0}},data:{calendarData:null,curentMonth:"",curentMothScrollInto:null,selectDate:{}},attached(){const e=new Date;new calendar(new Date(e.getFullYear()-1,9,1)).calendarData,new calendar(new Date(e.getFullYear()+1,9,1)).calendarData;this.curentCalendar=new calendar,this.setData({calendarData:this.curentCalendar.calendarData}),this.rangeSelected={}},methods:{show(){this.selectComponent("#popModal").show(),this.setData({curentMonth:this.curentCalendar.month},(()=>{this.setData({curentMothScrollInto:`calendar_id_${this.curentCalendar.month}`})}))},hide(){this.triggerEvent("onClose")},handleSelectDay(e){switch(this.data.type){case"single":this.singleSelect(e);break;case"multiple":case"range":this.multiSelect(e);break;default:this.multiSelect(escape)}},handleConfirm(){const{selectDate:e,clickConfirmAutoClose:t}=this.data;this.triggerEvent("onConfirm",Object.keys(e)),t&&this.selectComponent("#popModal").hide()},handleClose(e){this.triggerEvent("onCancel",""),e&&this.reset()},singleSelect(e){const{day:t,month:a,year:n,index:l,select:s}=e.currentTarget.dataset,r={};r[`${n}-${a}-${t}`]=!0,(this.single_month||this.single_index)&&this.setData({[`calendarData[${[this.single_month-1]}].days[${this.single_index}].select`]:!1}),this.setData({[`calendarData[${[a-1]}].days[${l}].select`]:!s,selectDate:r},(()=>{this.single_month=a,this.single_index=l}))},multiSelect(e){const{day:t,month:a,year:n,index:l,select:s}=e.currentTarget.dataset,r=`${n}-${a}-${t}`;let{selectDate:c}=this.data;c&&c.hasOwnProperty(r)?(c[r]=!s,s&&delete c[r]):c[r]=!0,this.setData({[`calendarData[${[a-1]}].days[${l}].select`]:!s,selectDate:c})},rangeSelect(e){const{day:t,month:a,year:n,index:l,select:s}=e.currentTarget.dataset,r=`${n}-${a}-${t}`.toString();let{selectDate:c}=this.data;this.rangeSelected[r]=l;if(3===Object.keys(this.rangeSelected).length)return this.rangeSelectedToSet(!1,(()=>{this.rangeSelected={},this.rangeSelected[r]=l,this.rangeSelectedToSet(!0)})),null;this.rangeSelectedToSet(!0)},rangeSelectedToSet(e,t){console.log("this.rangeSelect:",this.rangeSelected);const a=Object.keys(this.rangeSelected);a.forEach(((n,l)=>{const s=n.split("-"),[r,c,i]=s,o=this.rangeSelected[n],d=this.data.calendarData[`${[c-1]}`].days[`${o}`],h=a[0]>a[1]?"止":"起";this.setData({[`calendarData[${[c-1]}].days[${o}]`]:{...d,select:e,tips:h}},(()=>{t&&"function"==typeof t&&t()}))}))},reset(){this.setData({calendarData:calendar.calendarData,selectDate:{}})}}});